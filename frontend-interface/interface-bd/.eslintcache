[{"/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/index.js":"1","/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/App.js":"2","/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/reportWebVitals.js":"3","/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/assets/index.js":"4","/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/api.js":"5"},{"size":599,"mtime":1607438615471,"results":"6","hashOfConfig":"7"},{"size":10337,"mtime":1607440196896,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607348474000,"results":"9","hashOfConfig":"7"},{"size":251,"mtime":1607349977000,"results":"10","hashOfConfig":"7"},{"size":468,"mtime":1607379160628,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10alvip",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/index.js",[],["25","26"],"/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/App.js",["27","28","29","30","31","32"],"import React, { useState } from 'react'\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport gotas from './assets/gotas.png'\nimport { api, requestAxios } from './api'\n\nfunction App() {\n\n  var now = new Date();\n  var days = ['Dom','Seg','Ter','Qua','Qui','Sex','Sab'];\n  var months = ['Jan','Feb','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'];\n  const [drop, setDrop] = useState('')\n  const [jaCliquei, setJaCliquei] = useState(false)\n  const [dropText, setDropText] = useState('Selecione a query que deseja realizar...')\n  const [disableInput, setDisableInput] = useState(true)\n  const [placeholderInput, setPlaceholderInput] = useState('...')\n  const [idQueryItem, setIdQueryItem] = useState('')\n  const [idQuery, setIdQuery] = useState(1)\n  const [query1, setQuery1] = useState([])\n  const [query2, setQuery2] = useState([])\n  const [query3, setQuery3] = useState([])\n  const [query4, setQuery4] = useState([])\n  const [query5, setQuery5] = useState([])\n  const [query6, setQuery6] = useState([])\n\n  const handleClickDropDown = () => {\n    if (!jaCliquei) {\n      setDrop('is-active')\n      setJaCliquei(true)\n    }\n    else {\n      setDrop('')\n      setJaCliquei(false)\n    }\n  }\n\n  const handleBlurDropDown = () => {\n    setDrop('')\n    setJaCliquei(false)\n  }\n\n  const handleValue = (e) => {\n    setDropText(e.currentTarget.textContent)\n    setDisableInput(false)\n    setIdQuery(parseInt(e.currentTarget.id))\n    if (e.currentTarget.id === '1')\n      setPlaceholderInput('Digite o nome da Tag')\n    else if (e.currentTarget.id === '2' || e.currentTarget.id === '5')\n      setPlaceholderInput('Digite o nome da Empresa')\n    else if (e.currentTarget.id === '3')\n      setPlaceholderInput('Digite o nome do Aluno')\n    else {\n      setPlaceholderInput('...')\n      setDisableInput(true)\n    }\n  }\n\n  const handleChange = (e) => {\n    setIdQueryItem(e.currentTarget.value)\n  }\n\n  const handleSubmit = () => {\n    if (idQuery === 1) {\n      requestAxios({\n        url: api + `query-tags/${idQueryItem}`,\n        method: 'get'\n      })\n      .then(response => {\n        setQuery1(response.body)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    else if (idQuery === 2) {\n      requestAxios({\n        url: api + `query-vagas/${idQueryItem}`,\n        method: 'get'\n      })\n      .then(response => {\n        setQuery2(response.body)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    else if (idQuery === 3) {\n      requestAxios({\n        url: api + `query-historico/${idQueryItem}`,\n        method: 'get'\n      })\n      .then(response => {\n        if(JSON.stringify(response.body) === JSON.stringify({})) {\n          setQuery3([])\n        }\n        else {\n          setQuery3([response.body])\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    else if (idQuery === 4) {\n      requestAxios({\n        url: api + `vaga`,\n        method: 'get'\n      })\n      .then(response => {\n        setQuery4(response.body)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    else if (idQuery === 5) {\n      requestAxios({\n        url: api + `query-salario-medio/${idQueryItem}`,\n        method: 'get'\n      })\n      .then(response => {\n        setQuery5([response.body])\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    else if (idQuery === 6) {\n      requestAxios({\n        url: api + `query-maiores-contratadoras`,\n        method: 'get'\n      })\n      .then(response => {\n        setQuery6(response.body)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"Header\">\n          <span className=\"title-1\">\n            QUERIES\n          </span>\n          <span className=\"title-2\">\n            BANCO DE DADOS\n          </span>\n          <img src={gotas} className=\"img-gotas\" alt=\"gotas\"/>\n          <span className=\"week-day\">\n            {days[now.getDay()]}\n          </span>\n          <span className=\"month-day\">\n            {months[now.getMonth()]} {now.getDate()}\n          </span>\n        </div>\n        <span className=\"text1\">\n          SELECIONE A QUERY QUE DESEJA EXECUTAR\n        </span>\n        <div className=\"buttons\">\n          <button className=\"button is-success\" onClick={handleSubmit}>Fazer Query!</button>\n        </div>\n        <div className=\"position-dropdown\">\n          <div className={`${\"dropdown \" + drop}`} onClick={handleClickDropDown} onBlur={handleBlurDropDown}>\n            <div className=\"dropdown-trigger\">\n              <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu3\">\n                <span>{dropText}</span>\n                <span className=\"icon is-small\">\n                  <FontAwesomeIcon icon=\"chevron-down\" size=\"sm\"></FontAwesomeIcon>\n                </span>\n              </button>\n            </div>\n            <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n              <div className=\"dropdown-content\">\n                <a id='1' href=\"#\" className=\"dropdown-item\" onMouseDown={handleValue}>\n                  Visualizar empresas com uma determinada Tag\n                </a>\n                <a id='2' href=\"#\" className=\"dropdown-item\" onMouseDown={handleValue}>\n                  Visualizar as vagas disponíveis numa empresa\n                </a>\n                <a id='3' href=\"#\" className=\"dropdown-item\" onMouseDown={handleValue}>\n                  Visualizar a última empresa em que um aluno trabalhou\n                </a>\n                <a id='4' href=\"#\" className=\"dropdown-item\" onMouseDown={handleValue}>\n                  Visualizar todas as vagas disponíveis\n                </a>\n                <a id='5' href=\"#\" className=\"dropdown-item\" onMouseDown={handleValue}>\n                  Visualizar salário médio de uma empresa\n                </a>\n                <a id='6' href=\"#\" className=\"dropdown-item\" onMouseDown={handleValue}>\n                  Visualizar as empresas com mais alunos contratados\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"text-box\">\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" disabled={disableInput} placeholder={placeholderInput} onChange={handleChange}/>\n          </div>\n        </div>\n        <div className=\"table-position\">\n          <table className=\"table\">\n            <thead>\n              {idQuery === 1 &&\n                <tr>\n                  <th>Nome</th>\n                  <th>Email</th>\n                  <th>Endereço</th>\n                  <th>Telefone</th>\n                  <th>Tags</th>\n                  <th>Descrição</th>\n                </tr>\n              }\n              {idQuery === 2 &&\n                <tr>\n                  <th>Título</th>\n                  <th>Endereço</th>\n                  <th>Auxílio</th>\n                  <th>Descrição</th>\n                </tr>\n              }\n              {idQuery === 3 &&\n                <tr>\n                  <th>Nome do Aluno</th>\n                  <th>Email</th>\n                  <th>Data de Início</th>\n                  <th>Data de Término</th>\n                  <th>Título da Vaga</th>\n                  <th>Nome da Empresa</th>\n                </tr>\n              }\n              {idQuery === 4 &&\n                <tr>\n                  <th>Título</th>\n                  <th>Endereço</th>\n                  <th>Auxílio</th>\n                  <th>Descrição</th>\n                </tr>\n              }\n              {idQuery === 5 &&\n                <tr>\n                  <th>Nome da empresa</th>\n                  <th>Salário Médio</th>\n                </tr>\n              }\n              {idQuery === 6 &&\n                <tr>\n                  <th>Nome da empresa</th>\n                  <th>Quantidade de alunos</th>\n                </tr>\n              }\n            </thead>\n            <tbody>\n              {idQuery === 1 &&\n                query1.map((item) => \n                  <tr>\n                    <td>{item[\"name\"]}</td>\n                    <td>{item[\"contact_email\"]}</td>\n                    <td>{item[\"address\"]}</td>\n                    <td>{item[\"phone_number\"]}</td>\n                    <td>{item[\"tags\"].map(item_tag => {\n                      return item_tag[\"name\"] + \", \"\n                    })}</td>\n                    <td>{item[\"description\"]}</td>\n                  </tr>\n                )\n              }\n              {idQuery === 2 &&\n                query2.map((item) => \n                  <tr>\n                    <td>{item[\"title\"]}</td>\n                    <td>{item[\"location\"]}</td>\n                    <td>{item[\"grant\"]}</td>\n                    <td>{item[\"description\"]}</td>\n                  </tr>\n                )\n              }\n              {idQuery === 3 &&\n                query3.map((item) => \n                  <tr>\n                    <td>{item[\"student\"][\"name\"]}</td>\n                    <td>{item[\"student\"][\"email\"]}</td>\n                    <td>{item[\"start_date\"]}</td>\n                    <td>{item[\"end_date\"]}</td>\n                    <td>{item[\"opportunity\"][\"title\"]}</td>\n                    <td>{item[\"opportunity\"][\"company\"]['name']}</td>\n                  </tr>\n                )\n              }\n              {idQuery === 4 && query4 &&\n                query4.map((item) => \n                  <tr>\n                    <td>{item[\"title\"]}</td>\n                    <td>{item[\"location\"]}</td>\n                    <td>{item[\"grant\"]}</td>\n                    <td>{item[\"description\"]}</td>\n                  </tr>\n                )\n              }\n              {idQuery === 5 && query5 &&\n                query5.map((item) => \n                  <tr>\n                    <td>{item[\"name\"]}</td>\n                    <td>{item[\"avg\"]}</td>\n                  </tr>\n                )\n              }\n              {idQuery === 6 && query6 &&\n                query6.map((item) => \n                  <tr>\n                    <td>{item[\"name\"]}</td>\n                    <td>{item[\"count\"]}</td>\n                  </tr>\n                )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/reportWebVitals.js",[],"/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/assets/index.js",[],"/home/notroot/projetos/PCS3623/trabalho-bd/interface-bd/src/api.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":178,"column":17,"nodeType":"41","endLine":178,"endColumn":88},{"ruleId":"39","severity":1,"message":"40","line":181,"column":17,"nodeType":"41","endLine":181,"endColumn":88},{"ruleId":"39","severity":1,"message":"40","line":184,"column":17,"nodeType":"41","endLine":184,"endColumn":88},{"ruleId":"39","severity":1,"message":"40","line":187,"column":17,"nodeType":"41","endLine":187,"endColumn":88},{"ruleId":"39","severity":1,"message":"40","line":190,"column":17,"nodeType":"41","endLine":190,"endColumn":88},{"ruleId":"39","severity":1,"message":"40","line":193,"column":17,"nodeType":"41","endLine":193,"endColumn":88},{"ruleId":"35","replacedBy":"42"},{"ruleId":"37","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["44"],["45"],"no-global-assign","no-unsafe-negation"]